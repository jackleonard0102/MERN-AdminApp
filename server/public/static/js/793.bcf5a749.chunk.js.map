{"version":3,"file":"static/js/793.bcf5a749.chunk.js","mappings":"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","sources":["container/pages/Admin/Profile/Partials/UpdateProfileForm.jsx","container/pages/Admin/Profile/Partials/UpdatePasswordForm.jsx","container/pages/Admin/Profile/Partials/DeleteAccountForm.jsx","container/pages/Admin/Profile/Edit.jsx","../node_modules/antd/es/col/index.js","../node_modules/antd/es/row/index.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport {\n  Form,\n  Input,\n  Button,\n  Card,\n  Typography,\n} from 'antd';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { updateProfile } from '../../../../../redux/auth/authSlice';\n\nconst { Title, Text } = Typography;\n\nfunction UpdateProfileForm() {\n  const [form] = Form.useForm();\n  const loader = useSelector((state) => state.auth.loader);\n  const user = useSelector((state) => state.auth.user);\n  const errors = useSelector((state) => state.auth.errors);\n  const dispatch = useDispatch();\n\n  const onFinish = (values) => {\n    console.log('Received values of form: ', values);\n    dispatch(updateProfile(values));\n  };\n\n  return (\n    <Card className=\"max-w-xl w-full shadow-lg\">\n      <div className=\"my-4\">\n        <Title level={3}>Profile Information</Title>\n        <Text type=\"secondary\">\n          Update your profile information including your username and email.\n        </Text>\n      </div>\n      <Form\n        name=\"register\"\n        form={form}\n        initialValues={{\n          name: user.name,\n          email: user.email,\n        }}\n        className=\"form\"\n        scrollToFirstError\n        onFinish={onFinish}\n      >\n        <Form.Item\n          name=\"name\"\n          rules={[\n            {\n              required: true,\n              message: 'Please input your Name!',\n            },\n          ]}\n        >\n          <Input size=\"large\" placeholder=\"Name\" autoFocus />\n        </Form.Item>\n        <Form.Item\n          name=\"email\"\n          rules={[\n            {\n              type: 'email',\n              message: 'The input is not valid E-mail!',\n            },\n            {\n              required: true,\n              message: 'Please input your E-mail!',\n            },\n          ]}\n          validateStatus={errors.email ? 'error' : ''}\n          help={errors.email}\n        >\n          <Input size=\"large\" placeholder=\"E-mail\" />\n        </Form.Item>\n        <Form.Item>\n          <Button\n            loading={loader}\n            type=\"primary\"\n            htmlType=\"submit\"\n            className=\"mt-2\"\n            size=\"large\"\n          >\n            Save\n          </Button>\n        </Form.Item>\n      </Form>\n    </Card>\n  );\n}\n\nexport default UpdateProfileForm;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Form, Input, Button, Card, Typography } from 'antd';\nimport { updatePassword } from '../../../../../redux/auth/authSlice';\n\nconst { Title, Text } = Typography;\n\nfunction UpdatePasswordForm() {\n  const [form] = Form.useForm();\n  const loader = useSelector((state) => state.auth.loader);\n  const errors = useSelector((state) => state.auth.errors);\n  const dispatch = useDispatch();\n  const onFinish = (values) => {\n    // console.log('Received values of form: ', values);\n    dispatch(updatePassword(values));\n    form.resetFields();\n  };\n\n  return (\n    <Card className=\"max-w-xl w-full shadow-lg\">\n      <div className=\"my-4\">\n        <Title level={3}>Update Password</Title>\n        <Text type=\"secondary\">\n          Ensure your account is using a long, random password to stay secure.\n        </Text>\n      </div>\n      <Form\n        name=\"update_password\"\n        form={form}\n        className=\"form\"\n        scrollToFirstError\n        onFinish={onFinish}\n      >\n        <Form.Item\n          name=\"oldPassword\"\n          rules={[\n            {\n              required: true,\n              message: 'Please input current password!',\n            },\n          ]}\n          validateStatus={errors.oldPassword ? 'error' : ''}\n          help={errors.oldPassword}\n          hasFeedback\n        >\n          <Input.Password size=\"large\" placeholder=\"Current Password\" />\n        </Form.Item>\n        <Form.Item\n          name=\"newPassword\"\n          rules={[\n            {\n              required: true,\n              message: 'Please input new password!',\n            },\n          ]}\n          hasFeedback\n        >\n          <Input.Password size=\"large\" placeholder=\"New Password\" />\n        </Form.Item>\n        <Form.Item\n          name=\"confirm\"\n          dependencies={['newPassword']}\n          hasFeedback\n          rules={[\n            {\n              required: true,\n              message: 'Please confirm new password!',\n            },\n            ({ getFieldValue }) => ({\n              validator(_, value) {\n                if (!value || getFieldValue('newPassword') === value) {\n                  return Promise.resolve();\n                }\n                return Promise.reject(\n                  new Error('The two passwords that you entered do not match!')\n                );\n              },\n            }),\n          ]}\n        >\n          <Input.Password size=\"large\" placeholder=\"Confirm new Password\" />\n        </Form.Item>\n        <Form.Item>\n          <Button\n            loading={loader}\n            type=\"primary\"\n            htmlType=\"submit\"\n            className=\"mt-2\"\n            size=\"large\"\n          >\n            Save\n          </Button>\n        </Form.Item>\n      </Form>\n    </Card>\n  );\n}\n\nexport default UpdatePasswordForm;\n","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Form, Input, Button, Modal, Card, Typography } from 'antd';\nimport { deleteAccount } from '../../../../../redux/auth/authSlice';\n\nconst { Title, Text } = Typography;\n\nfunction DeleteAccountForm() {\n  const [form] = Form.useForm();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const loader = useSelector((state) => state.auth.loader);\n  const errors = useSelector((state) => state.auth.errors);\n  const dispatch = useDispatch();\n\n  const onFinish = (values) => {\n    // console.log('Received values of form: ', values);\n    dispatch(deleteAccount(values));\n    form.resetFields();\n  };\n\n  const showModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const handleCancel = () => {\n    setIsModalOpen(false);\n  };\n  return (\n    <Card className=\"max-w-xl w-full shadow-lg\">\n      <div className=\"my-4\">\n        <Title level={3}>Delete Account</Title>\n        <Text type=\"secondary\">\n          Once your account is deleted, all of its resources and data will be\n          permanently deleted. Before deleting your account, please download any\n          data or information that you wish to retain.\n        </Text>\n      </div>\n      <div className=\"my-2\">\n        <Button type=\"primary\" size=\"large\" danger onClick={showModal}>\n          Delete Account\n        </Button>\n        <Modal\n          title=\"Delete Account\"\n          open={isModalOpen}\n          onOk={form.submit}\n          onCancel={handleCancel}\n          footer={[\n            <Button key=\"back\" type=\"primary\" onClick={handleCancel}>\n              Cancel\n            </Button>,\n            <Button\n              key=\"submit\"\n              type=\"primary\"\n              loading={loader}\n              danger\n              onClick={form.submit}\n            >\n              Delete Account\n            </Button>,\n          ]}\n        >\n          <div className=\"my-4\">\n            <Text type=\"secondary\">\n              Once your account is deleted, all of its resources and data will\n              be permanently deleted. Before deleting your account, please\n              download any data or information that you wish to retain.\n            </Text>\n          </div>\n          <Form form={form} name=\"delete_account\" onFinish={onFinish}>\n            <Form.Item\n              name=\"password\"\n              rules={[\n                {\n                  required: true,\n                  message: 'Please input your password!',\n                },\n              ]}\n              validateStatus={errors.password ? 'error' : ''}\n              help={errors.password}\n              hasFeedback\n            >\n              <Input.Password placeholder=\"Password\" size=\"large\" />\n            </Form.Item>\n          </Form>\n        </Modal>\n      </div>\n    </Card>\n  );\n}\n\nexport default DeleteAccountForm;\n","import React from 'react'\nimport { Col, Row } from 'antd';\n\nimport UpdateProfileForm from './Partials/UpdateProfileForm';\nimport UpdatePasswordForm from './Partials/UpdatePasswordForm';\nimport DeleteAccountForm from './Partials/DeleteAccountForm';\n\nfunction Edit() {\n  return (\n    <div className='container mx-auto my-4 px-4'>\n      <Row gutter={[16, 16]}>\n        <Col span={24} className='flex justify-center'>\n          <UpdateProfileForm />\n        </Col>\n        <Col span={24} className='flex justify-center'>\n          <UpdatePasswordForm />\n        </Col>\n        <Col span={24} className='flex justify-center'>\n          <DeleteAccountForm />\n        </Col>\n      </Row>\n    </div >\n  )\n}\n\nexport default Edit;","\"use client\";\n\nimport { Col } from '../grid';\nexport default Col;","\"use client\";\n\nimport { Row } from '../grid';\nexport default Row;"],"names":["Title","Text","Typography","form","Form","useForm","loader","useSelector","state","auth","user","errors","dispatch","useDispatch","_jsxs","Card","className","children","_jsx","level","type","name","initialValues","email","scrollToFirstError","onFinish","values","console","log","updateProfile","Item","rules","required","message","Input","size","placeholder","autoFocus","validateStatus","help","Button","loading","htmlType","updatePassword","resetFields","oldPassword","hasFeedback","Password","dependencies","_ref","getFieldValue","validator","_","value","Promise","reject","Error","resolve","isModalOpen","setIsModalOpen","useState","handleCancel","danger","onClick","showModal","Modal","title","open","onOk","submit","onCancel","footer","deleteAccount","password","Row","gutter","Col","span","UpdateProfileForm","UpdatePasswordForm","DeleteAccountForm"],"sourceRoot":""}