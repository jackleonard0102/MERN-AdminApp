{"version":3,"file":"static/js/394.092eced9.chunk.js","mappings":"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","sources":["container/pages/Admin/Settings/Partials/Welcome.jsx","container/pages/Admin/Settings/Settings.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport {\n  Form,\n  Input,\n  Button,\n  Card,\n  Typography,\n  Upload,\n  message,\n  Spin,\n} from 'antd';\nimport ImgCrop from 'antd-img-crop';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport constants from '../../../../../config/constants';\nimport { getStorage } from '../../../../../helpers';\nimport { getUser, updateProfile } from '../../../../../redux/auth/authSlice';\n\nconst { Title, Text } = Typography;\n\nconst beforeUpload = (file) => {\n  const isJpgOrPng =\n    file.type === 'image/jpeg' ||\n    file.type === 'image/png' ||\n    file.type === 'image/webp';\n  if (!isJpgOrPng) {\n    message.error('You can only upload JPG/PNG/WEBP file!');\n  }\n  const isLt2M = file.size / 1024 / 1024 < 2;\n  if (!isLt2M) {\n    message.error('Image must be smaller than 2MB!');\n  }\n  return isJpgOrPng && isLt2M;\n};\n\nfunction WelcomePageDetail() {\n  const [form] = Form.useForm();\n  const loader = useSelector((state) => state.auth.loader);\n  const user = useSelector((state) => state.auth.user);\n  const errors = useSelector((state) => state.auth.errors);\n  const [refresh, setRefresh] = useState(0);\n  const dispatch = useDispatch();\n\n  const [loading, setLoading] = useState(false);\n  const [imageUrl, setImageUrl] = useState(user.logo);\n  const [uploadedImageUrl, setUploadedImageUrl] = useState(null);\n\n  useEffect(() => {\n    // Fetch and set settings data if needed\n    // For example:\n    // dispatch(getSettings());\n  }, [dispatch]);\n\n  const updateSettings = async (values) => {\n    try {\n      const response = await fetch(`${constants.HOST_URL}settings/update`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: getStorage('token'),\n        },\n        body: JSON.stringify({\n          siteCode: values.siteCode,\n          appVersion: values.appVersion,\n        }),\n      });\n      const data = await response.json();\n      if (data.success) {\n        message.success('Settings updated successfully');\n      } else {\n        message.error('Failed to update settings');\n      }\n    } catch (error) {\n      message.error('Error updating settings');\n      console.error(error);\n    }\n  };\n\n  const onFinish = (values) => {\n    console.log('Received values of form: ', values);\n    // Update logo and settings\n    updateSettings(values);\n  };\n\n  const handleChange = (info) => {\n    console.log('Upload Status:', info.file.status); // Log upload status\n    console.log('Response:', info.file.response); // Log the response from the server\n    \n    if (info.file.status === 'uploading') {\n      setLoading(true);\n      return;\n    }\n    \n    if (info.file.status === 'done') {\n      const newImageUrl = `${constants.SOCKET_URL}${info.file.response?.path}`;\n      console.log('New Image URL:', newImageUrl); // Log new image URL\n      \n      setImageUrl(newImageUrl);\n      setUploadedImageUrl(newImageUrl);\n      setLoading(false);\n      dispatch(getUser());\n      setRefresh((prev) => prev + 1);\n    } else if (info.file.status === 'error') {\n      message.error('Upload failed.');\n      setLoading(false);\n    }\n  };\n  \n\n  return (\n    <Card className=\"max-w-xl w-full shadow-lg\">\n      <div className=\"my-4\">\n        <Title level={3}>Welcome Page Information</Title>\n        <Text type=\"secondary\">\n          Update your welcome page's logo, site code, and app version.\n        </Text>\n      </div>\n      <Form\n        name=\"settings\"\n        form={form}\n        initialValues={{\n          siteCode: user.siteCode || '',\n          appVersion: user.appVersion || '',\n        }}\n        className=\"form\"\n        scrollToFirstError\n        onFinish={onFinish}\n      >\n        <Form.Item name=\"logo\">\n          <ImgCrop rotationSlider>\n            <Upload\n              name=\"file\"\n              listType=\"picture-card\"\n              className=\"logo-uploader\"\n              multiple={false}\n              showUploadList={false}\n              action={`${constants.HOST_URL}settings/upload-logo`}\n              accept=\"image/*\"\n              headers={{\n                Authorization: getStorage('token'),\n              }}\n              data={{\n                oldFile: imageUrl,\n              }}\n              beforeUpload={beforeUpload}\n              onChange={handleChange}\n            >\n              {loading ? (\n                <Spin />\n              ) : (\n                <div className=\"relative\">\n                  <img\n                    src={\n                      uploadedImageUrl || imageUrl\n                        ? `${uploadedImageUrl || imageUrl}?t=${new Date().getTime()}`\n                        : '/imgs/logo.jpg'\n                    }\n                    alt=\"logo\"\n                    className=\"w-full\"\n                  />\n                  <div className=\"absolute top-0 left-0 w-full h-full hover:bg-[#000a] opacity-0 hover:opacity-100 flex items-center justify-center text-white\">\n                    Change\n                  </div>\n                </div>\n              )}\n            </Upload>\n          </ImgCrop>\n        </Form.Item>\n        <Form.Item\n          name=\"siteCode\"\n          rules={[\n            {\n              required: true,\n              message: 'Please input the Site Code!',\n            },\n          ]}\n        >\n          <Input size=\"large\" placeholder=\"Site Code\" />\n        </Form.Item>\n        <Form.Item\n          name=\"appVersion\"\n          rules={[\n            {\n              required: true,\n              message: 'Please input the App Version!',\n            },\n          ]}\n        >\n          <Input size=\"large\" placeholder=\"App Version\" />\n        </Form.Item>\n        <Form.Item>\n          <Button\n            loading={loader}\n            type=\"primary\"\n            htmlType=\"submit\"\n            className=\"mt-2\"\n            size=\"large\"\n          >\n            Save\n          </Button>\n        </Form.Item>\n      </Form>\n    </Card>\n  );\n}\n\nexport default WelcomePageDetail;\n","import React from 'react'\nimport { Col, Row } from 'antd';\nimport WelcomePageDetail from './Partials/Welcome'\n\nfunction Edit() {\n  return (\n    <div className='container mx-auto my-4 px-4'>\n      <Row gutter={[16, 16]}>\n        <Col span={24} className='flex justify-center'>\n          <WelcomePageDetail />\n        </Col>\n      </Row>\n    </div >\n  )\n}\n\nexport default Edit;"],"names":["Title","Text","Typography","beforeUpload","file","isJpgOrPng","type","message","error","isLt2M","size","form","Form","useForm","loader","useSelector","state","auth","user","refresh","setRefresh","errors","useState","dispatch","useDispatch","loading","setLoading","imageUrl","setImageUrl","logo","uploadedImageUrl","setUploadedImageUrl","useEffect","_jsxs","Card","className","children","_jsx","level","name","initialValues","siteCode","appVersion","scrollToFirstError","onFinish","values","console","log","async","response","fetch","concat","constants","HOST_URL","method","headers","Authorization","getStorage","body","JSON","stringify","json","success","updateSettings","Item","ImgCrop","rotationSlider","Upload","listType","multiple","showUploadList","action","accept","data","oldFile","onChange","info","status","_info$file$response","newImageUrl","SOCKET_URL","path","getUser","prev","Spin","src","Date","getTime","alt","rules","required","Input","placeholder","Button","htmlType","Row","gutter","Col","span","WelcomePageDetail"],"sourceRoot":""}