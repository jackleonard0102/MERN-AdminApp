{"version":3,"file":"static/js/726.5aeecf3b.chunk.js","mappings":"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","sources":["container/pages/Admin/Users.jsx","services/userAPI.js"],"sourcesContent":["// Users.jsx\nimport React, { useEffect, useState, useCallback } from 'react';\nimport {\n  Button,\n  Col,\n  Row,\n  Table,\n  Space,\n  Pagination,\n  Input,\n  Modal,\n  Form,\n  message,\n  Layout,\n  Badge,\n  Avatar,\n  Switch,\n  Select,\n  Upload,\n  Spin,\n} from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport constants from '../../../config/constants';\nimport { updatePageState } from '../../../redux/user/userSlice';\nimport { getStorage } from '../../../helpers';\nimport {\n  getAllUsers,\n  updateUserStatus,\n  updateUserDetails,\n  deleteUser,\n  createUser,\n} from '../../../services/userAPI';\nimport ImgCrop from 'antd-img-crop';\n\nconst { Search } = Input;\nconst { Content } = Layout;\nconst { Option } = Select;\n\nfunction Users() {\n  const dispatch = useDispatch();\n  const pageState = useSelector((state) => state.user);\n\n  const [users, setUsers] = useState([]);\n  const [page, setPage] = useState(pageState.page);\n  const [total, setTotal] = useState(pageState.total);\n  const [loading, setLoading] = useState(false);\n  const [pageSize, setPageSize] = useState(pageState.pageSize);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [form] = Form.useForm();\n  const [isUpdateModalVisible, setIsUpdateModalVisible] = useState(false);\n  const [isCreateModalVisible, setIsCreateModalVisible] = useState(false);\n  const [createForm] = Form.useForm();\n  const [imageUrl, setImageUrl] = useState(null);\n\n  const columns = [\n    {\n      title: 'No',\n      dataIndex: '_id',\n      key: 'no',\n      width: '70px',\n      render: (_, row, index) => (\n        <>\n          {(page - 1) * pageSize + index + 1}{' '}\n          {row.socketId.length > 0 ? (\n            <Badge status=\"success\" />\n          ) : (\n            <Badge status=\"default\" />\n          )}\n        </>\n      ),\n    },\n    {\n      title: 'Profile',\n      dataIndex: 'name',\n      key: 'name',\n      render: (_, row) => (\n        <div className=\"flex items-center\">\n          {/* <Avatar\n            size=\"large\"\n            src={\n              row.logo\n                ? `${constants.SOCKET_URL}${row.logo}`\n                : '/imgs/logo.jpg'\n            }\n          /> */}\n          <div className=\"ml-2\">\n            <b>{row.name}</b>\n            <br />\n            {row.email}\n          </div>\n        </div>\n      ),\n    },\n    {\n      title: 'Status',\n      dataIndex: 'status',\n      key: 'status',\n      align: 'center',\n      render: (_, row) => (\n        <Switch\n          checked={row.status === 1}\n          onChange={() => handleStatusChange(row._id, row.status)}\n        />\n      ),\n    },\n    {\n      title: 'Permission',\n      dataIndex: 'permission',\n      key: 'permission',\n      align: 'center',\n      render: (permission) => {\n        switch (permission) {\n          case 2:\n            return 'Office Manager';\n          case 3:\n            return 'Office Clerk';\n          case 4:\n            return 'Field Clerk';\n          default:\n            return 'Unknown';\n        }\n      },\n    },\n    {\n      title: 'Action',\n      key: 'action',\n      align: 'center',\n      render: (_, row) => (\n        <Space size=\"middle\">\n          <Button\n            type=\"primary\"\n            size=\"small\"\n            onClick={() => showUpdateModal(row)}\n          >\n            Update\n          </Button>\n          <Button danger size=\"small\" onClick={() => showDeleteModal(row._id)}>\n            Delete\n          </Button>\n        </Space>\n      ),\n    },\n  ];\n\n  const getUsers = useCallback(\n    (current) => {\n      setLoading(true);\n      getAllUsers({\n        page: current || page,\n        limit: pageSize,\n      })\n        .then((data) => {\n          setLoading(false);\n          if (data.users) {\n            setUsers(\n              data.users\n                .filter((user) => user.status !== 2 && user.permission !== 1) // Filter out admins\n                .map((user) => ({ ...user, key: user._id }))\n            );\n            setTotal(data.total);\n            dispatch(\n              updatePageState({\n                total: data.total,\n                page,\n                pageSize,\n              })\n            );\n          } else {\n            console.error('No users found in response:', data); // Add this line\n          }\n        })\n        .catch((error) => {\n          setLoading(false);\n          console.error('Error fetching users:', error);\n          message.error('Failed to fetch users'); // Display an error message to the user\n        });\n    },\n    [dispatch, page, pageSize]\n  );\n\n  useEffect(() => {\n    getUsers();\n  }, [getUsers, page, pageSize]);\n\n  const handlePageChange = (pageNumber, pageSize) => {\n    setPage(pageNumber);\n    setPageSize(pageSize);\n  };\n\n  const onSearch = () => {\n    if (page === 1) {\n      getUsers(1);\n    } else {\n      setPage(1);\n    }\n  };\n\n  const handleStatusChange = async (userId, currentStatus) => {\n    const newStatus = currentStatus == 1 ? 0 : 1;\n    try {\n      await updateUserStatus(userId, { status: newStatus });\n      getUsers();\n    } catch (error) {\n      console.error('Failed to update user status', error);\n      message.error('Failed to update user status');\n    }\n  };\n\n  const handleCreate = async () => {\n    try {\n      const values = await createForm.validateFields();\n      const formData = new FormData();\n      if (values.logo && values.logo.file) {\n        formData.append('logo', values.logo.file.originFileObj);\n      }\n      formData.append('name', values.name);\n      formData.append('email', values.email);\n      formData.append('password', values.password);\n      formData.append('permission', parseInt(values.permission, 10)); // Updated\n\n      await createUser(formData);\n      setIsCreateModalVisible(false);\n      getUsers();\n      message.success('User created successfully');\n    } catch (error) {\n      message.error('Failed to create user');\n    }\n  };\n\n  const handleUpdate = async () => {\n    try {\n      const values = await form.validateFields();\n      const formData = new FormData();\n      if (values.logo && values.logo.file) {\n        formData.append('logo', values.logo.file.originFileObj);\n      }\n      formData.append('name', values.name);\n      formData.append('email', values.email);\n      formData.append('permission', parseInt(values.permission, 10)); // Updated\n\n      await updateUserDetails(selectedUser._id, formData);\n      setIsUpdateModalVisible(false);\n      getUsers();\n      message.success('User updated successfully');\n    } catch (error) {\n      message.error('Failed to update user');\n    }\n  };\n\n  const showDeleteModal = (userId) => {\n    Modal.confirm({\n      title: 'Are you sure you want to delete this user?',\n      content: 'This action cannot be undone.',\n      okText: 'Yes',\n      okType: 'danger',\n      cancelText: 'No',\n      onOk: () => handleDelete(userId),\n    });\n  };\n\n  const handleDelete = async (userId) => {\n    try {\n      await deleteUser(userId);\n      getUsers();\n      message.success('User deleted successfully');\n    } catch (error) {\n      message.error('Failed to delete user');\n    }\n  };\n\n  const beforeUpload = (file) => {\n    const isJpgOrPng =\n      file.type === 'image/jpeg' ||\n      file.type === 'image/png' ||\n      file.type === 'image/webp';\n    if (!isJpgOrPng) {\n      message.error('You can only upload JPG/PNG/WEBP file!');\n    }\n    const isLt2M = file.size / 1024 / 1024 < 2;\n    if (!isLt2M) {\n      message.error('Image must be smaller than 2MB!');\n    }\n    return isJpgOrPng && isLt2M;\n  };\n\n  const handleFileChange = (info, setImageUrl, setLoading) => {\n    if (info.file.status === 'uploading') {\n      setLoading(true);\n      return;\n    }\n    if (info.file.status === 'done') {\n      setImageUrl(info.file.response?.path);\n      setLoading(false);\n    }\n  };\n\n  const showUpdateModal = (user) => {\n    setSelectedUser(user);\n    form.setFieldsValue({\n      logo: user.logo,\n      name: user.name,\n      email: user.email,\n      permission: user.permission.toString(), // Convert permission to string\n    });\n    setImageUrl(user.logo); // Set the initial logo URL\n    setIsUpdateModalVisible(true);\n  };\n\n  return (\n    <Content className=\"mx-auto p-2 px-5 my-5\">\n      <Row gutter={[16, 16]} justify=\"end\">\n        <Col sm={12} md={8} lg={6} xl={4}>\n          <Search placeholder=\"Name...\" allowClear onSearch={onSearch} />\n        </Col>\n        <Col sm={12} md={8} lg={6} xl={4}>\n          <Search placeholder=\"Email...\" allowClear onSearch={onSearch} />\n        </Col>\n        <Col flex=\"auto\" />\n        <Col>\n          <Button type=\"primary\" onClick={() => setIsCreateModalVisible(true)}>\n            Add New User\n          </Button>\n        </Col>\n        <Col span={24}>\n          <Table\n            loading={loading}\n            columns={columns}\n            dataSource={users}\n            pagination={false}\n          />\n          <div className=\"text-right mt-2\">\n            <Pagination\n              showQuickJumper\n              showSizeChanger\n              pageSize={pageSize}\n              current={page}\n              total={total}\n              onChange={handlePageChange}\n            />\n          </div>\n        </Col>\n      </Row>\n\n      <Modal\n        visible={isCreateModalVisible}\n        title=\"Create New User\"\n        okText=\"Create\"\n        cancelText=\"Cancel\"\n        onCancel={() => setIsCreateModalVisible(false)}\n        onOk={handleCreate}\n      >\n        <Form form={createForm} layout=\"vertical\">\n          {/* <Form.Item\n            name=\"logo\"\n            label=\"Avatar\"\n            valuePropName=\"file\"\n            getValueFromEvent={(e) => (Array.isArray(e) ? e : e && e.file)}\n            rules={[{ required: false }]}\n          >\n            <ImgCrop rotationSlider>\n              <Upload\n                name=\"file\"\n                listType=\"picture-circle\"\n                className=\"logo-uploader\"\n                multiple={false}\n                showUploadList={false}\n                action={`${constants.HOST_URL}users/upload`}\n                accept=\"image/*\"\n                headers={{\n                  Authorization: getStorage('token'),\n                }}\n                beforeUpload={beforeUpload}\n                onChange={(info) =>\n                  handleFileChange(info, setImageUrl, setLoading)\n                }\n              >\n                {loading ? (\n                  <Spin />\n                ) : (\n                  <div className=\"relative\">\n                    <img\n                      src={\n                        imageUrl\n                          ? `${constants.SOCKET_URL}${imageUrl}`\n                          : '/imgs/logo.jpg'\n                      }\n                      alt=\"logo\"\n                      className=\"w-full rounded-full\"\n                    />\n                    <div className=\"rounded-full absolute top-0 left-0 w-full h-full hover:bg-[#000a] opacity-0 hover:opacity-100 flex items-center justify-center text-white\">\n                      Change\n                    </div>\n                  </div>\n                )}\n              </Upload>\n            </ImgCrop>\n          </Form.Item> */}\n          <Form.Item\n            name=\"name\"\n            label=\"Name\"\n            rules={[{ required: true, message: 'Please enter the name' }]}\n          >\n            <Input />\n          </Form.Item>\n          <Form.Item\n            name=\"email\"\n            label=\"Email\"\n            rules={[{ required: true, message: 'Please enter the email' }]}\n          >\n            <Input />\n          </Form.Item>\n          <Form.Item\n            name=\"password\"\n            label=\"Password\"\n            rules={[{ required: true, message: 'Please enter the password' }]}\n          >\n            <Input.Password />\n          </Form.Item>\n          <Form.Item\n            name=\"permission\"\n            label=\"Permission\"\n            rules={[{ required: true, message: 'Please select a permission' }]}\n          >\n            <Select placeholder=\"Select permission\">\n              <Option value=\"2\">Office Manager</Option>\n              <Option value=\"3\">Office Clerk</Option>\n              <Option value=\"4\">Field Clerk</Option>\n            </Select>\n          </Form.Item>\n        </Form>\n      </Modal>\n\n      <Modal\n        visible={isUpdateModalVisible}\n        title=\"Update User\"\n        okText=\"Update\"\n        cancelText=\"Cancel\"\n        onCancel={() => setIsUpdateModalVisible(false)}\n        onOk={handleUpdate}\n      >\n        <Form form={form} layout=\"vertical\">\n          {/* <Form.Item\n            name=\"logo\"\n            label=\"Avatar\"\n            valuePropName=\"file\"\n            getValueFromEvent={(e) => (Array.isArray(e) ? e : e && e.file)}\n          >\n            <ImgCrop rotationSlider>\n              <Upload\n                name=\"file\"\n                listType=\"picture-circle\"\n                className=\"logo-uploader\"\n                multiple={false}\n                showUploadList={false}\n                action={`${constants.HOST_URL}users/upload`}\n                accept=\"image/*\"\n                headers={{\n                  Authorization: getStorage('token'),\n                }}\n                beforeUpload={beforeUpload}\n                onChange={(info) =>\n                  handleFileChange(info, setImageUrl, setLoading)\n                }\n              >\n                {loading ? (\n                  <Spin />\n                ) : (\n                  <div className=\"relative\">\n                    <img\n                      src={\n                        imageUrl\n                          ? `${constants.SOCKET_URL}${imageUrl}`\n                          : '/imgs/logo.jpg'\n                      }\n                      alt=\"logo\"\n                      className=\"w-full rounded-full\"\n                    />\n                    <div className=\"rounded-full absolute top-0 left-0 w-full h-full hover:bg-[#000a] opacity-0 hover:opacity-100 flex items-center justify-center text-white\">\n                      Change\n                    </div>\n                  </div>\n                )}\n              </Upload>\n            </ImgCrop>\n          </Form.Item> */}\n          <Form.Item\n            name=\"name\"\n            label=\"Name\"\n            rules={[{ required: true, message: 'Please enter the name' }]}\n          >\n            <Input />\n          </Form.Item>\n          <Form.Item\n            name=\"email\"\n            label=\"Email\"\n            rules={[{ required: true, message: 'Please enter the email' }]}\n          >\n            <Input />\n          </Form.Item>\n          <Form.Item\n            name=\"permission\"\n            label=\"Permission\"\n            rules={[{ required: true, message: 'Please select a permission' }]}\n          >\n            <Select placeholder=\"Select permission\">\n              <Option value=\"2\">Office Manager</Option>\n              <Option value=\"3\">Office Clerk</Option>\n              <Option value=\"4\">Field Clerk</Option>\n            </Select>\n          </Form.Item>\n        </Form>\n      </Modal>\n    </Content>\n  );\n}\n\nexport default Users;\n","// userAPI.js\nimport { getRequest, postRequest, putRequest, deleteRequest, postRequestWithFiles, putRequestWithFiles } from \"./axiosClient\";\n\nexport const getAllUsers = async (query) => {\n  try {\n    const response = await getRequest('users', { ...query, excludePermission: 1 }); // Adding excludePermission to query\n    return response.data;\n  } catch (error) {\n    console.log('[GET users error]', error);\n    return {\n      users: [],\n      total: 0,\n    };\n  }\n};\n\nexport const updateUserStatus = async (userId, status) => {\n  try {\n    await putRequest(`users/${userId}/status`, status); // Ensure the URL is correct\n  } catch (error) {\n    console.error('[UPDATE user status error]', error.response || error); // Log the response error\n    throw error;\n  }\n};\n\nexport const updateUserDetails = async (userId, formData) => {\n  try {\n    const response = await putRequestWithFiles(`users/${userId}`, formData); // Ensure the URL is correct\n    return response.data;\n  } catch (error) {\n    console.error('[UPDATE user details error]', error);\n    throw error;\n  }\n};\n\nexport const deleteUser = async (userId) => {\n  try {\n    await deleteRequest(`users/${userId}`); // Ensure the URL is correct\n  } catch (error) {\n    console.error('[DELETE user error]', error);\n    throw error;\n  }\n};\n\nexport const createUser = async (formData) => {\n  try {\n    const response = await postRequestWithFiles('users', formData); // Ensure the URL is correct\n    return response.data;\n  } catch (error) {\n    console.error('[CREATE user error]', error);\n    throw error;\n  }\n};"],"names":["Search","Input","Content","Layout","Option","Select","dispatch","useDispatch","pageState","useSelector","state","user","users","setUsers","useState","page","setPage","total","setTotal","loading","setLoading","pageSize","setPageSize","selectedUser","setSelectedUser","form","Form","useForm","isUpdateModalVisible","setIsUpdateModalVisible","isCreateModalVisible","setIsCreateModalVisible","createForm","imageUrl","setImageUrl","columns","title","dataIndex","key","width","render","_","row","index","_jsxs","_Fragment","children","socketId","length","_jsx","Badge","status","className","name","email","align","Switch","checked","onChange","handleStatusChange","_id","permission","Space","size","Button","type","onClick","showUpdateModal","danger","showDeleteModal","getUsers","useCallback","current","async","getRequest","query","excludePermission","data","error","console","log","getAllUsers","limit","then","filter","map","updatePageState","catch","message","useEffect","onSearch","userId","currentStatus","newStatus","putRequest","concat","response","updateUserStatus","Modal","confirm","content","okText","okType","cancelText","onOk","handleDelete","deleteRequest","deleteUser","success","setFieldsValue","logo","toString","Row","gutter","justify","Col","sm","md","lg","xl","placeholder","allowClear","flex","span","Table","dataSource","pagination","Pagination","showQuickJumper","showSizeChanger","handlePageChange","pageNumber","visible","onCancel","values","validateFields","formData","FormData","file","append","originFileObj","password","parseInt","postRequestWithFiles","createUser","layout","Item","label","rules","required","Password","value","putRequestWithFiles","updateUserDetails"],"sourceRoot":""}